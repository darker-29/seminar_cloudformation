AWSTemplateFormatVersion: "2010-09-09"
Description: Template generated by rain

Parameters:
  Env:
    Type: String
    Default: test

Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB Security Group
      GroupName: !Sub ${Env}-alb-secgroup
      VpcId:
        Fn::ImportValue:
          !Sub ${Env}-VpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub ${Env}-alb-secgroup

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${Env}-alb
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - Fn::ImportValue:
            !Sub ${Env}-PublicSubnet1a
        - Fn::ImportValue:
            !Sub ${Env}-PublicSubnet1c
      Tags:
        - Key: Name
          Value: !Sub ${Env}-alb

  ALBListener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Order: 1
          Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: '#{host}'
            Path: '/#{path}'
            Query: '#{query}'
            StatusCode: 'HTTP_301'

              #ALB443Listener:
              #  Type: AWS::ElasticLoadBalancingV2::Listener
              #  Properties:
              #    LoadBalancerArn: !Ref ApplicationLoadBalancer
              #    Port: 443
              #    Protocol: HTTPS
              #    SslPolicy: ELBSecurityPolicy-2016-08
              #    Certificates:
              #      - CertificateArn:
              #          Fn::ImportValue:
              #            !Sub ${Env}-Certificate
              #    DefaultActions:
              #      - Order: 1
              #        Type: forward
              #        ForwardConfig:
              #          TargetGroupStickinessConfig:
              #            DurationSeconds: 0
              #            Enabled: false
              #          TargetGroups:
              #            - TargetGroupArn: !Ref ALBTargetGroup
              #              Weight: 100

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Env}-targetgroup
      VpcId:
        Fn::ImportValue:
          !Sub ${Env}-VpcId
      Protocol: HTTP
      Port: 443
      ProtocolVersion: HTTP2
      TargetType: alb
      Targets:
        - Id: !Ref ApplicationLoadBalancer
          Port: 80
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /healthcheck
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 5
      Tags:
        - Key: Name
          Value: !Sub ${Env}-targetgroup

Outputs:
  ALBTargetGroup:
    Value: !Ref ALBTargetGroup
    Export:
      Name: !Sub ${Env}-ALBTargetGroup
